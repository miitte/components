class {
  onCreate(input) {
    this.state = {
      route: input.route ? input.route : '/',
      entries: input.entries ? input.entries: [],
      pendingRequest: false,
    }
  }
  onMount() {
    // Set default root as first state.
    history.replaceState({
      route: this.state.route
    }, document.title, this.state.route)

    // Change route on history changes.
    window.onpopstate = e => {
      if (e.state === undefined || e.state.route === undefined) return
      this.state.route = e.state.route
      this.travelTo(e.state.route)
    }
  }
  handleRoute(route) {
    if (this.state.route === route) return
    // Add route to history.
    history.pushState({
      route: route
    }, document.title, route)
    this.state.route = route
    this.travelTo(route)
  }
  travelTo(route) {
    fetch('/api/'+route)
      .then(res => res.json())
      .then(data => {
        this.state.entries = data.entries
        this.forceUpdate()
      })
  }
}

context route=state.route entries=state.entries on-route('handleRoute')
  <${input.renderBody}/>
